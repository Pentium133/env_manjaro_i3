#! /usr/bin/env sh

RESET_CODE=0
BOLD=1
DIM=2
UNDERLINED=4
BLINK=5
REVERSE=7
HIDDEN=8

DEFAULT=39
BLACK=30
RED=31
GREEN=32
YELLOW=33
BLUE=34
MAGENTA=35
CYAN=36
LIGHT_GREY=37
DARK_GREY=90
LIGHT_RED=91
LIGHT_GREEN=92
LIGHT_YELLOW=93
LIGHT_BLUE=94
LIGHT_MAGENTA=95
LIGHT_CYAN=96
WHITE=97

BG_DEFAULT=49
BG_BLACK=40
BG_RED=41
BG_GREEN=42
BG_YELLOW=43
BG_BLUE=44
BG_MAGENTA=45
BG_CYAN=46
BG_LIGHT_GREY=47
BG_DARK_GREY=100
BG_LIGHT_RED=101
BG_LIGHT_GREEN=102
BG_LIGHT_YELLOW=103
BG_LIGHT_BLUE=104
BG_LIGHT_MAGENTA=105
BG_LIGHT_CYAN=106
BG_WHITE=107

function attr_list(){
  attr "0   RESET_CODE" RESET_CODE
  attr "1   BOLD" BOLD
  attr "2   DIM" DIM
  attr "4   UNDERLINED" UNDERLINED
  attr "5   BLINK" BLINK
  attr "7   REVERSE" REVERSE
  attr "8   HIDDEN" HIDDEN
  attr "39  DEFAULT" DEFAULT
  attr "30  BLACK" DARK_GREY
  attr "31  RED" RED
  attr "32  GREEN" GREEN
  attr "33  YELLOW" YELLOW
  attr "34  BLUE" BLUE
  attr "35  MAGENTA" MAGENTA
  attr "36  CYAN" CYAN
  attr "37  LIGHT_GREY" LIGHT_GREY
  attr "90  DARK_GREY" DARK_GREY
  attr "91  LIGHT_RED" LIGHT_RED
  attr "92  LIGHT_GREEN" LIGHT_GREEN
  attr "93  LIGHT_YELLOW" LIGHT_YELLOW
  attr "94  LIGHT_BLUE" LIGHT_BLUE
  attr "95  LIGHT_MAGENTA" LIGHT_MAGENTA
  attr "96  LIGHT_CYAN" LIGHT_CYAN
  attr "97  WHITE" WHITE
  attr ""
  attr "49  BG_DEFAULT" BG_DEFAULT
  attr "40  BG_BLACK" BG_BLACK
  attr "41  BG_RED" BG_RED
  attr "42  BG_GREEN" BG_GREEN DARK_GREY
  attr "43  BG_YELLOW" BG_YELLOW DARK_GREY
  attr "44  BG_BLUE" BG_BLUE
  attr "45  BG_MAGENTA" BG_MAGENTA
  attr "46  BG_CYAN" BG_CYAN
  attr "47  BG_LIGHT_GREY" BG_LIGHT_GREY DARK_GREY
  attr "100 BG_DARK_GREY" BG_DARK_GREY
  attr "101 BG_LIGHT_RED" BG_LIGHT_RED DARK_GREY
  attr "102 BG_LIGHT_GREEN" BG_LIGHT_GREEN DARK_GREY
  attr "103 BG_LIGHT_YELLOW" BG_LIGHT_YELLOW DARK_GREY
  attr "104 BG_LIGHT_BLUE" BG_LIGHT_BLUE
  attr "105 BG_LIGHT_MAGENTA" BG_LIGHT_MAGENTA DARK_GREY
  attr "106 BG_LIGHT_CYAN" BG_LIGHT_CYAN DARK_GREY
  attr "107 BG_WHITE" BG_WHITE DARK_GREY
}

function attr(){
  local msg=$1
  local codes=""

  for name in "${@:2}"; do
    local code="${(P)name}"
    codes="${codes}\e[${code}m"
  done

  echo -e "${codes}${msg}\e[${RESET_CODE}m"
}


function log_info() { attr "[INFO] $1" DARK_GRAY; return; }

function log_err()  { attr "[ERROR] $1" RED;  return; }


function touch_dir(){
  local dir=$1
  if [ ! -d "$dir" ]; then
    mkdir -p $dir
    log_info "[$dir] has been created"
  fi
  return;
}

function strlen(){
  local str=$1
  echo ${#str}
}

function is_pos(){
  local result=$(($1 < 0))
  return $result;
}

function is_valid_range(){
  local result=$(($1 > $2))
  return $result;
}

function is_valid_abs_range(){
  if is_pos $1 && is_pos $2 && is_valid_range $1 $2; then
    return 0;
  else
    return 1;
  fi
}

function substring(){
  local str=$1
  local from=$2
  local to=$3
  local length=$(strlen $str)

  if ! is_valid_abs_range $from $to ; then
    log_err "range [$from, $to] is out of bound string [len=$length]"
    return;
  fi

  if (($from > $length)) || (($to > $length)); then
    log_err "range [$from, $to] is out of bound string [len=$length]"
    return;
  fi

  local result=${str:$from:$(($to))}
  echo "$result"
}

function drop_right(){
  local str=$1
  local n=$2
  local length=$(strlen $str)

  if (($n > $length)) || (($n < 0)); then
    log_err "[n=$n] out of range string [length=$length]"
    return;
  fi

  local from=0
  local to=$length-$n

  local result=$(substring $str $from $to)
  
  echo $result
}

function drop_left(){
  local str=$1
  local n=$2
  local length=$(strlen $str)

  if (($n > $length)) || (($n < 0)); then
    log_err "[n=$n] out of range string [length=$length]"
    return;
  fi

  local from=$n
  local to=$length

  local result=$(substring $str $from $to)
  
  echo $result
}

function fill_right(){
  local str=$1
  local chr=$2
  local n=$3

  if (($n < 0)); then
    log_err "[n=$n] should be >= 0"
    return;
  fi

  local i="0"
  while [ $i -lt $n ]
  do
    i=$[$i+1]
    str="$str$chr"
  done

  echo $str
}

function fill_left(){
  local str=$1
  local chr=$2
  local n=$3

  if (($n < 0)); then
    log_err "[n=$n] should be >= 0"
    return;
  fi

  local i="0"
  while [ $i -lt $n ]
  do
    i=$[$i+1]
    str="$chr$str"
  done

  echo $str
}
